Current program state: id#1
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; ; ; 
Int x;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; ; 
Int y;

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; 
v=0

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=v-1;

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 

Symbol table: 
v -> -1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 
v=v-1;

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; ; 

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 
v=v-1;

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; 
x=1

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@6d416fd8; y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; ; 

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; 
model.statements.NoOperation@6d416fd8

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
y=3; model.statements.NoOperation@3fc2109c; print(v*10;); ; 

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@3fc2109c; print(v*10;); 
y=3

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@3fc2109c; print(v*10;); 

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v*10;)
model.statements.NoOperation@3fc2109c

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v*10;)

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2
30

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
new(v, 20); Ref(0, Ref(0, Int)) a;; new(a, v); new(v, 30); new(v, 60); print(rH(rH(a))); ; ; ; ; 
Ref(0, Int) v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
new(v, 20); Ref(0, Ref(0, Int)) a;; new(a, v); new(v, 30); new(v, 60); print(rH(rH(a))); ; ; ; ; 

Symbol table: 
v -> Int->0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Ref(0, Ref(0, Int)) a;; new(a, v); new(v, 30); new(v, 60); print(rH(rH(a))); ; ; ; 
new(v, 20)

Symbol table: 
v -> Int->0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Ref(0, Ref(0, Int)) a;; new(a, v); new(v, 30); new(v, 60); print(rH(rH(a))); ; ; ; 

Symbol table: 
v -> Int->1

Output: 

File table: 

Heap: 
1 -> 20
-------------------------------
Current program state: id#1
Execution stack: 
new(a, v); new(v, 30); new(v, 60); print(rH(rH(a))); ; ; 
Ref(0, Ref(0, Int)) a;

Symbol table: 
v -> Int->1

Output: 

File table: 

Heap: 
1 -> 20
-------------------------------
Current program state: id#1
Execution stack: 
new(a, v); new(v, 30); new(v, 60); print(rH(rH(a))); ; ; 

Symbol table: 
a -> Ref(0, Int)->0
v -> Int->1

Output: 

File table: 

Heap: 
1 -> 20
-------------------------------
Current program state: id#1
Execution stack: 
new(v, 30); new(v, 60); print(rH(rH(a))); ; 
new(a, v)

Symbol table: 
a -> Ref(0, Int)->0
v -> Int->1

Output: 

File table: 

Heap: 
1 -> 20
-------------------------------
Current program state: id#1
Execution stack: 
new(v, 30); new(v, 60); print(rH(rH(a))); ; 

Symbol table: 
a -> Ref(0, Int)->2
v -> Int->1

Output: 

File table: 

Heap: 
1 -> 20
2 -> Int->1
-------------------------------
Current program state: id#1
Execution stack: 
new(v, 60); print(rH(rH(a))); 
new(v, 30)

Symbol table: 
a -> Ref(0, Int)->2
v -> Int->1

Output: 

File table: 

Heap: 
1 -> 20
2 -> Int->1
-------------------------------
Current program state: id#1
Execution stack: 
new(v, 60); print(rH(rH(a))); 

Symbol table: 
a -> Ref(0, Int)->2
v -> Int->3

Output: 

File table: 

Heap: 
1 -> 20
2 -> Int->3
3 -> 30
-------------------------------
Current program state: id#1
Execution stack: 
print(rH(rH(a)))
new(v, 60)

Symbol table: 
a -> Ref(0, Int)->2
v -> Int->3

Output: 

File table: 

Heap: 
1 -> 20
2 -> Int->3
3 -> 30
-------------------------------
Current program state: id#1
Execution stack: 
print(rH(rH(a)))

Symbol table: 
a -> Ref(0, Int)->2
v -> Int->4

Output: 

File table: 

Heap: 
1 -> 20
2 -> Int->4
3 -> 30
4 -> 60
-------------------------------
Current program state: id#1
Execution stack: 

Symbol table: 
a -> Ref(0, Int)->2
v -> Int->4

Output: 
60

File table: 

Heap: 
1 -> 20
2 -> Int->4
3 -> 30
4 -> 60
-------------------------------
Current program state: id#2
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; ; ; 
Int x;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; ; 
Int y;

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; 
v=0

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
x=1; model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; ; 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; 
x=1

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@5b42143b; y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; ; 

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; 
model.statements.NoOperation@5b42143b

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
y=3; model.statements.NoOperation@4285f4d9; print(v*10;); ; 

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@4285f4d9; print(v*10;); 
y=3

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@4285f4d9; print(v*10;); 

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
print(v*10;)
model.statements.NoOperation@4285f4d9

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
print(v*10;)

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int b;; a=2+3*5;;; b=a+1;; print(b); ; ; 
Int a;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int b;; a=2+3*5;;; b=a+1;; print(b); ; ; 

Symbol table: 
a -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
a=2+3*5;;; b=a+1;; print(b); ; 
Int b;

Symbol table: 
a -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
a=2+3*5;;; b=a+1;; print(b); ; 

Symbol table: 
a -> 0
b -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
b=a+1;; print(b); 
a=2+3*5;;

Symbol table: 
a -> 0
b -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
b=a+1;; print(b); 

Symbol table: 
a -> 17
b -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(b)
b=a+1;

Symbol table: 
a -> 17
b -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(b)

Symbol table: 
a -> 17
b -> 18

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 

Symbol table: 
a -> 17
b -> 18

Output: 
18

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; ; ; 
Int x;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; ; 
Int y;

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; 
v=0

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
x=1; model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; ; 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; 
x=1

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@654ed00; y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; ; 

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; 
model.statements.NoOperation@654ed00

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
y=3; model.statements.NoOperation@18a877aa; print(v*10;); ; 

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@18a877aa; print(v*10;); 
y=3

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
model.statements.NoOperation@18a877aa; print(v*10;); 

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
print(v*10;)
model.statements.NoOperation@18a877aa

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
print(v*10;)

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; ; ; 
Int x;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; ; 
Int y;

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; 
v=0

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;); x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; ; 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v+3;)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; 
x=1

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@52313cdd; y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; ; 

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; 
model.statements.NoOperation@52313cdd

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
y=3; model.statements.NoOperation@28881c7e; print(v*10;); ; 

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@28881c7e; print(v*10;); 
y=3

Symbol table: 
v -> 0
x -> 1
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@28881c7e; print(v*10;); 

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v*10;)
model.statements.NoOperation@28881c7e

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v*10;)

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 

Symbol table: 
v -> 0
x -> 1
y -> 3

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; 
Int x;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; 
Int y;

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; 
v=0

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 
v=v-1;

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#2
Execution stack: 

Symbol table: 
v -> -1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 
v=v-1;

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#3
Execution stack: 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 
v=v-1;

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; 
x=1

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#4
Execution stack: 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; 

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; 
model.statements.NoOperation@67ff02f7

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; 

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@3a312a50; print(v*10;); 
y=3

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
model.statements.NoOperation@3a312a50; print(v*10;); 

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v*10;)
model.statements.NoOperation@3a312a50

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v*10;)

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2
30

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
Ref(0, Int) a;; v=10; new(a, 22); fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
Ref(0, Int) a;; v=10; new(a, 22); fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
v=10; new(a, 22); fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; ; ; 
Ref(0, Int) a;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
v=10; new(a, 22); fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; ; ; 

Symbol table: 
a -> Int->0
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
new(a, 22); fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; ; 
v=10

Symbol table: 
a -> Int->0
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
new(a, 22); fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; ; 

Symbol table: 
a -> Int->0
v -> 10

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; 
new(a, 22)

Symbol table: 
a -> Int->0
v -> 10

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#5
Execution stack: 
fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; ); print(v); print(rH(a)); ; 

Symbol table: 
a -> Int->1
v -> 10

Output: 

File table: 

Heap: 
1 -> 22
-------------------------------
Current program state: id#5
Execution stack: 
print(v); print(rH(a)); 
fork(wH(a,30); v=32; print(v); print(rH(a)); ; ; )

Symbol table: 
a -> Int->1
v -> 10

Output: 

File table: 

Heap: 
1 -> 22
-------------------------------
Current program state: id#5
Execution stack: 
print(v); print(rH(a)); 

Symbol table: 
a -> Int->1
v -> 10

Output: 

File table: 

Heap: 
1 -> 22
-------------------------------
Current program state: id#6
Execution stack: 
wH(a,30); v=32; print(v); print(rH(a)); ; ; 

Symbol table: 
a -> Int->1
v -> 10

Output: 

File table: 

Heap: 
1 -> 22
-------------------------------
Current program state: id#5
Execution stack: 
print(rH(a))
print(v)

Symbol table: 
a -> Int->1
v -> 10

Output: 

File table: 

Heap: 
1 -> 22
-------------------------------
Current program state: id#6
Execution stack: 
v=32; print(v); print(rH(a)); ; 
wH(a,30)

Symbol table: 
a -> Int->1
v -> 10

Output: 

File table: 

Heap: 
1 -> 22
-------------------------------
Current program state: id#5
Execution stack: 
print(rH(a))

Symbol table: 
a -> Int->1
v -> 10

Output: 
10

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#6
Execution stack: 
v=32; print(v); print(rH(a)); ; 

Symbol table: 
a -> Int->1
v -> 10

Output: 
10

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#5
Execution stack: 

Symbol table: 
a -> Int->1
v -> 10

Output: 
10
30

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#6
Execution stack: 
print(v); print(rH(a)); 
v=32

Symbol table: 
a -> Int->1
v -> 10

Output: 
10
30

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#6
Execution stack: 
print(v); print(rH(a)); 

Symbol table: 
a -> Int->1
v -> 32

Output: 
10
30

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#6
Execution stack: 
print(rH(a))
print(v)

Symbol table: 
a -> Int->1
v -> 32

Output: 
10
30

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#6
Execution stack: 
print(rH(a))

Symbol table: 
a -> Int->1
v -> 32

Output: 
10
30
32

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#6
Execution stack: 

Symbol table: 
a -> Int->1
v -> 32

Output: 
10
30
32
30

File table: 

Heap: 
1 -> 30
-------------------------------
Current program state: id#7
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; ; 
Int v;

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
Int x;; Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; ; 

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; 
Int x;

Symbol table: 
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
Int y;; v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; 
Int y;

Symbol table: 
v -> 0
x -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
v=0; repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; 
v=0

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3); x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; ; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
repeat (fork(print(v); v=v-1;; ); v=v+1;; ) 
until (v == 3)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#8
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#8
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#8
Execution stack: 
v=v-1;

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#8
Execution stack: 

Symbol table: 
v -> -1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#9
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#9
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
fork(print(v); v=v-1;; ); v=v+1;; 

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#9
Execution stack: 
v=v-1;

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;
fork(print(v); v=v-1;; )

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#9
Execution stack: 

Symbol table: 
v -> 0
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }
v=v+1;

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#10
Execution stack: 
print(v); v=v-1;; 

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 
while(v == 3 == false)
{ fork(print(v); v=v-1;; ); v=v+1;;  }

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#10
Execution stack: 
v=v-1;
print(v)

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
x=1; model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; ; 

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#10
Execution stack: 
v=v-1;

Symbol table: 
v -> 2
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; 
x=1

Symbol table: 
v -> 3
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#10
Execution stack: 

Symbol table: 
v -> 1
x -> 0
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
model.statements.NoOperation@67ff02f7; y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; ; 

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; 
model.statements.NoOperation@67ff02f7

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
y=3; model.statements.NoOperation@3a312a50; print(v*10;); ; 

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
model.statements.NoOperation@3a312a50; print(v*10;); 
y=3

Symbol table: 
v -> 3
x -> 1
y -> 0

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
model.statements.NoOperation@3a312a50; print(v*10;); 

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
print(v*10;)
model.statements.NoOperation@3a312a50

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 
print(v*10;)

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2

File table: 

Heap: 
-------------------------------
Current program state: id#7
Execution stack: 

Symbol table: 
v -> 3
x -> 1
y -> 3

Output: 
0
1
2
30

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int v; a=true; If(a) then{ v=2 } else{ v=3 }; print(v);
Boolean a

Symbol table: 

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
Int v; a=true; If(a) then{ v=2 } else{ v=3 }; print(v);

Symbol table: 
a -> false

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
a=true; If(a) then{ v=2 } else{ v=3 }; print(v);
Int v

Symbol table: 
a -> false

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
a=true; If(a) then{ v=2 } else{ v=3 }; print(v);

Symbol table: 
a -> false
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
If(a) then{ v=2 } else{ v=3 }; print(v);
a=true

Symbol table: 
a -> false
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
If(a) then{ v=2 } else{ v=3 }; print(v);

Symbol table: 
a -> true
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v)
If(a) then{ v=2 } else{ v=3 }

Symbol table: 
a -> true
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v)
v=2

Symbol table: 
a -> true
v -> 0

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 
print(v)

Symbol table: 
a -> true
v -> 2

Output: 

File table: 

Heap: 
-------------------------------
Current program state: id#1
Execution stack: 

Symbol table: 
a -> true
v -> 2

Output: 
2

File table: 

Heap: 
-------------------------------
